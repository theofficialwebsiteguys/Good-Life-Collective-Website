var o=class{constructor(){this.m=new Map}reset(e){this.m=new Map(Object.entries(e))}get(e,t){let r=this.m.get(e);return r!==void 0?r:t}getBoolean(e,t=!1){let r=this.m.get(e);return r===void 0?t:typeof r=="string"?r==="true":!!r}getNumber(e,t){let r=parseFloat(this.m.get(e));return isNaN(r)?t!==void 0?t:NaN:r}set(e,t){this.m.set(e,t)}},i=new o;var s=function(n){return n.OFF="OFF",n.ERROR="ERROR",n.WARN="WARN",n}(s||{}),c=(n,...e)=>{let t=i.get("logLevel",s.WARN);if([s.WARN].includes(t))return console.warn(`[Ionic Warning]: ${n}`,...e)},a=(n,...e)=>{let t=i.get("logLevel",s.ERROR);if([s.ERROR,s.WARN].includes(t))return console.error(`[Ionic Error]: ${n}`,...e)},u=(n,...e)=>console.error(`<${n.tagName.toLowerCase()}> must be used inside ${e.join(" or ")}.`);export{i as a,c as b,a as c,u as d};
